*&---------------------------------------------------------------------*
*& Include          ZGPR0140F02
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  ALV_CL_PROCESS_1ST
*&---------------------------------------------------------------------*
FORM ALV_CL_PROCESS_1ST .
  IF GO_DOCKING_CONTAINER1 IS INITIAL.
    PERFORM ALV_CL_CONTROL_1ST
                USING 800
                CL_GUI_DOCKING_CONTAINER=>DOCK_AT_TOP.
  ELSE.
*   ALV Refresh
    PERFORM ALV_CL_REFRESH_TABLE_DISPLAY
                            USING  GO_ALV_GRID1
                                   G_REC_STABLE1.
  ENDIF.
ENDFORM.                    " ALV_CL_PROCESS_1ST
*&---------------------------------------------------------------------*
*&      Form  ALV_CL_CONTROL_1ST
*&---------------------------------------------------------------------*
FORM ALV_CL_CONTROL_1ST  USING    P_EXTENSION
                                  P_SIDE.
  DATA:
    L_COL TYPE INT4,
    L_ROW TYPE INT4,
    L_READY_FOR_INPUT  TYPE INT4.

** TOP PAGE
*  PERFORM ALV_CL_CREATE_OBJ_DOCK_CONT
*              USING    50
*                       CL_GUI_DOCKING_CONTAINER=>DOCK_AT_TOP
*              CHANGING GO_DOCKING_CONTAINER2.

* DOCKING_CONTAINER ###.
  PERFORM ALV_CL_CREATE_OBJ_DOCK_CONT
              USING    P_EXTENSION
                       P_SIDE
              CHANGING GO_DOCKING_CONTAINER1.

  PERFORM ALV_CL_CREATE_OBJ_ALV_GRID
              USING    GO_DOCKING_CONTAINER1
              CHANGING GO_ALV_GRID1.

  PERFORM ALV_CL_VARIANT_1ST.
  PERFORM ALV_CL_LAYOUT_1ST.
  PERFORM ALV_CL_REGISTER_EDIT_EVENT_1ST USING GO_ALV_GRID1.
  PERFORM ALV_CL_EXCLUDE_FCODE_1ST.
  PERFORM ALV_CL_CREATE_OBJ_EVENT_1ST.

* 변경모드
  L_READY_FOR_INPUT = 1.
  PERFORM ALV_CL_SET_FOR_INPUT USING GO_ALV_GRID1
                                     L_READY_FOR_INPUT.

**
*  PERFORM ALV_CL_CELL_CONTROL_1ST.
  PERFORM ALV_CL_SORT_1ST.
  PERFORM ALV_CL_FIELDCATALOG_MERGE_1ST.
  PERFORM ALV_CL_SET_FOR_FIRST_DIS_1ST.


ENDFORM.                    " ALV_CL_CONTROL_1ST
*&---------------------------------------------------------------------*
*&      Form  ALV_CL_VARIANT_1ST
*&---------------------------------------------------------------------*
FORM ALV_CL_VARIANT_1ST .
  CLEAR GS_ALV_VARIANT1.
* ABAP ######
  GS_ALV_VARIANT1-REPORT   = SY-REPID.
  GS_ALV_VARIANT1-USERNAME = SY-UNAME.
  GS_ALV_VARIANT1-HANDLE   = 'LST1'. "UPLOAD
ENDFORM.                    " ALV_CL_VARIANT_1ST
*&---------------------------------------------------------------------*
*&      Form  ALV_CL_LAYOUT_1ST
*&---------------------------------------------------------------------*
FORM ALV_CL_LAYOUT_1ST .


  CLEAR GS_ALV_LAYOUT1.
* Set a layout for the grid control
  GS_ALV_LAYOUT1-CWIDTH_OPT = 'X'.              "### ###
  GS_ALV_LAYOUT1-SEL_MODE   = 'D'.
  GS_ALV_LAYOUT1-TOTALS_BEF  = ' '.
*  GS_ALV_LAYOUT1-NO_MERGING = 'X'.
*  GS_ALV_LAYOUT1-DETAILINIT = 'X'.

* "DISPLAY INITIAL VALUES ON DETAIL SCREEN
*  GS_ALV_LAYOUT1-NO_ROWMARK = 'X'.
  GS_ALV_LAYOUT1-SMALLTITLE = 'X'.
*  GS_ALV_LAYOUT1-STYLEFNAME = 'CELLSTYL'.         "# ###
*  GS_ALV_LAYOUT1-CTAB_FNAME = 'CELLSCOL'.         "# #
  GS_ALV_LAYOUT1-ZEBRA = 'X'.


  CONDENSE: G_FILTEREDLINE,G_TOTALLINE.
  CONCATENATE G_FILTEREDLINE
              '/'
              G_TOTALLINE
         INTO GS_ALV_LAYOUT1-GRID_TITLE
         SEPARATED BY SPACE.
*

* ALV TITLE SETTING
*  GS_ALV_LAYOUT1-SMALLTITLE = 'M'.

*  GS_ALV_LAYOUT1-GRID_TITLE = G_ALV_TITLE.

*  GS_ALV_LAYOUT1-NO_KEYFIX  = ' '.
*  GS_ALV_LAYOUT1-BOX_FNAME  = 'CHECK'.
  GS_ALV_LAYOUT1-INFO_FNAME = 'ROWSCOL'.         "# #

ENDFORM.                    " ALV_CL_LAYOUT_1ST
*&---------------------------------------------------------------------*
*&      Form  ALV_CL_REGISTER_EDIT_EVENT_1ST
*&---------------------------------------------------------------------*
FORM ALV_CL_REGISTER_EDIT_EVENT_1ST
            USING   P_ALV_GRID TYPE REF TO CL_GUI_ALV_GRID.
* Edit  ### ##
  IF SY-BATCH IS INITIAL.
    CALL METHOD P_ALV_GRID->REGISTER_EDIT_EVENT
      EXPORTING
        I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED.
  ENDIF.
ENDFORM.                    " ALV_CL_REGISTER_EDIT_EVENT_1ST
*&---------------------------------------------------------------------*
*&      Form  ALV_CL_EXCLUDE_FCODE_1ST
*&---------------------------------------------------------------------*
FORM ALV_CL_EXCLUDE_FCODE_1ST .
* ### ### #### ## ### ####.
  REFRESH GT_FCODE1.
* FIELD-SYMBOLS : <TABLE> TYPE UI_FUNCTIONS.

*  DATA : LS_EXCLUDE   TYPE UI_FUNC.
*  DATA : L_TABLE_NAME LIKE FELD-NAME.

*  CONCATENATE 'PT_FCODE' '[]' INTO  L_TABLE_NAME.
*  ASSIGN     (L_TABLE_NAME)    TO <TABLE>.

  PERFORM ALV_CL_APPEND_EXCLUDE_FUNCTION
        TABLES GT_FCODE1 "<TABLE>
*        USING : CL_GUI_ALV_GRID=>MC_FC_EXCL_ALL, " ** ## #### **
        USING :
                CL_GUI_ALV_GRID=>MC_FC_LOC_UNDO, " ####&LOCAL&UNDO
*                CL_GUI_ALV_GRID=>MC_FC_AUF,      " #### &AUF
*                CL_GUI_ALV_GRID=>MC_FC_AVERAGE,  " &AVERAGE
*                cl_gui_alv_grid=>mc_fc_back_classic,
*                CL_GUI_ALV_GRID=>MC_FC_CALL_ABC, " &ABC
*                cl_gui_alv_grid=>mc_fc_call_chain,
*                cl_gui_alv_grid=>mc_fc_call_crbatch,
*                cl_gui_alv_grid=>mc_fc_call_crweb,
*                cl_gui_alv_grid=>mc_fc_call_lineitems,
*                cl_gui_alv_grid=>mc_fc_call_master_data,
*                cl_gui_alv_grid=>mc_fc_call_more,
*                cl_gui_alv_grid=>mc_fc_call_report,
*                cl_gui_alv_grid=>mc_fc_call_xint,
*                cl_gui_alv_grid=>mc_fc_call_xxl,
*                cl_gui_alv_grid=>mc_fc_col_invisible,
*                cl_gui_alv_grid=>mc_fc_col_optimize,
*                cl_gui_alv_grid=>mc_fc_current_variant,
*                cl_gui_alv_grid=>mc_fc_data_save,
*                CL_GUI_ALV_GRID=>MC_FC_DELETE_FILTER,
                 CL_GUI_ALV_GRID=>MC_FC_DESELECT_ALL,
*                cl_gui_alv_grid=>mc_fc_detail,
*                CL_GUI_ALV_GRID=>MC_FC_EXPCRDATA,
*                CL_GUI_ALV_GRID=>MC_FC_EXPCRDESIG,
*                CL_GUI_ALV_GRID=>MC_FC_EXPCRTEMPL,
*                cl_gui_alv_grid=>mc_fc_expmdb,
*                cl_gui_alv_grid=>mc_fc_extend,
**                cl_gui_alv_grid=>mc_fc_f4,
*                CL_GUI_ALV_GRID=>MC_FC_FILTER,
*                CL_GUI_ALV_GRID=>MC_FC_FIND,
*                cl_gui_alv_grid=>mc_fc_fix_columns,
                CL_GUI_ALV_GRID=>MC_FC_GRAPH,
*                CL_GUI_ALV_GRID=>MC_FC_HELP,
                CL_GUI_ALV_GRID=>MC_FC_INFO,
*                CL_GUI_ALV_GRID=>MC_FC_LOAD_VARIANT,
*                CL_GUI_ALV_GRID=>MC_FC_LOC_COPY,          " # ##
*                cl_gui_alv_grid=>mc_fc_html,
                CL_GUI_ALV_GRID=>MC_FC_LOC_COPY_ROW,      " # ##.
                CL_GUI_ALV_GRID=>MC_FC_LOC_CUT,           " ##.
                CL_GUI_ALV_GRID=>MC_FC_LOC_DELETE_ROW,    " ###.

                CL_GUI_ALV_GRID=>MC_FC_LOC_INSERT_ROW,    " ###.
                CL_GUI_ALV_GRID=>MC_FC_LOC_APPEND_ROW,    " ####.

                CL_GUI_ALV_GRID=>MC_FC_LOC_MOVE_ROW,

                CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE,         " ####.
                CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE_NEW_ROW, " ####.
*                cl_gui_alv_grid=>mc_fc_maintain_variant,
*                cl_gui_alv_grid=>mc_fc_maximum,
*                cl_gui_alv_grid=>mc_fc_minimum,
*                cl_gui_alv_grid=>mc_fc_pc_file,
*                CL_GUI_ALV_GRID=>MC_FC_PRINT,
*                CL_GUI_ALV_GRID=>MC_FC_PRINT_BACK,
*                CL_GUI_ALV_GRID=>MC_FC_PRINT_PREV,
                CL_GUI_ALV_GRID=>MC_FC_REFRESH,
*                cl_gui_alv_grid=>mc_fc_reprep,
*                cl_gui_alv_grid=>mc_fc_save_variant,
                CL_GUI_ALV_GRID=>MC_FC_SELECT_ALL,
*                cl_gui_alv_grid=>mc_fc_send,
*                cl_gui_alv_grid=>mc_fc_separator,
*"//{ 2022.06.29
*                CL_GUI_ALV_GRID=>MC_FC_SORT,
*                CL_GUI_ALV_GRID=>MC_FC_SORT_ASC,
*                CL_GUI_ALV_GRID=>MC_FC_SORT_DSC,
*"//} 2022.06.29
                CL_GUI_ALV_GRID=>MC_FC_SUBTOT,
                CL_GUI_ALV_GRID=>MC_MB_SUM,
                CL_GUI_ALV_GRID=>MC_FC_SUM,

*                cl_gui_alv_grid=>mc_fc_to_office,
*                cl_gui_alv_grid=>mc_fc_to_rep_tree,
*                cl_gui_alv_grid=>mc_fc_unfix_columns,
*                CL_GUI_ALV_GRID=>MC_FC_VIEWS,
                CL_GUI_ALV_GRID=>MC_FC_VIEW_CRYSTAL.
*                CL_GUI_ALV_GRID=>MC_FC_VIEW_EXCEL,
*                CL_GUI_ALV_GRID=>MC_FC_VIEW_GRID.
*                cl_gui_alv_grid=>mc_fc_word_processor.

ENDFORM.                    " ALV_CL_EXCLUDE_FCODE_1ST
*&---------------------------------------------------------------------*
*&      Form  ALV_CL_CREATE_OBJ_EVENT_1ST
*&---------------------------------------------------------------------*
FORM ALV_CL_CREATE_OBJ_EVENT_1ST .
  CLEAR G_EVENT_RECEIVER1.

  CREATE OBJECT G_EVENT_RECEIVER1.
  SET HANDLER G_EVENT_RECEIVER1->HANDLE_TOOLBAR1      FOR GO_ALV_GRID1.
  SET HANDLER G_EVENT_RECEIVER1->HANDLE_USER_COMMAND1 FOR GO_ALV_GRID1.
*  SET HANDLER G_EVENT_RECEIVER1->HANDLE_DOUBLE_CLICK1 FOR GO_ALV_GRID1.
*  SET HANDLER G_EVENT_RECEIVER1->HANDLE_AFTER_USER_COMMAND1
*                                                      FOR GO_ALV_GRID1.
*   SET HANDLER G_EVENT_RECEIVER1->HANDLE_DATA_CHANGED1 FOR GO_ALV_GRID1.
  SET HANDLER G_EVENT_RECEIVER1->HANDLE_DATA_CHANGED1_FINISHED
                                                      FOR GO_ALV_GRID1.
*  SET HANDLER G_EVENT_RECEIVER1->HANDLE_TOP_OF_PAGE1  FOR GO_ALV_GRID1.

ENDFORM.                    " ALV_CL_CREATE_OBJ_EVENT_1ST
*&---------------------------------------------------------------------*
*&      Form  ALV_CL_SET_FOR_INPUT
*&---------------------------------------------------------------------*
FORM ALV_CL_SET_FOR_INPUT
              USING PO_ALV_GRID TYPE REF TO CL_GUI_ALV_GRID
                                P_READY_FOR_INPUT.

* 사용자 정의 툴바 DISPLAY
* INPUT 값이 1이면 변경 모드가 가능하고
*            0이면 조회 모드이다.
  CALL METHOD PO_ALV_GRID->SET_READY_FOR_INPUT
    EXPORTING
      I_READY_FOR_INPUT = P_READY_FOR_INPUT.


ENDFORM.                    " ALV_CL_SET_FOR_INPUT
*&---------------------------------------------------------------------*
*&      Form  ALV_CL_SORT_1ST
*&---------------------------------------------------------------------*
FORM ALV_CL_SORT_1ST .

ENDFORM.                    " ALV_CL_SORT_1ST
*&---------------------------------------------------------------------*
*&      Form  ALV_CL_SET_FOR_FIRST_DIS_1ST
*&---------------------------------------------------------------------*
FORM ALV_CL_SET_FOR_FIRST_DIS_1ST .
  CALL METHOD GO_ALV_GRID1->SET_TABLE_FOR_FIRST_DISPLAY
    EXPORTING
*     I_STRUCTURE_NAME     = ' '
      IS_LAYOUT            = GS_ALV_LAYOUT1
      IS_VARIANT           = GS_ALV_VARIANT1
      I_SAVE               = 'A'
      IT_TOOLBAR_EXCLUDING = GT_FCODE1
    CHANGING
      IT_FIELDCATALOG      = GT_FDCAT1[]
      IT_SORT              = GT_SORT1
      IT_OUTTAB            = <FS_TABLE>.
ENDFORM.                    " ALV_CL_SET_FOR_FIRST_DIS_1ST
*&---------------------------------------------------------------------*
*&      Form  ALV_CL_TOOLBAR_PART1
*&---------------------------------------------------------------------*
FORM ALV_CL_TOOLBAR_PART1
             USING R_OBJECT TYPE REF TO CL_ALV_EVENT_TOOLBAR_SET
                   R_INTERACTIVE.

  DATA: LS_TOOLBAR  TYPE STB_BUTTON.

  CLEAR LS_TOOLBAR.
  MOVE 3                 TO LS_TOOLBAR-BUTN_TYPE.
  APPEND LS_TOOLBAR      TO R_OBJECT->MT_TOOLBAR.

  CLEAR LS_TOOLBAR.
  MOVE 'INRO'            TO LS_TOOLBAR-FUNCTION.
  MOVE 'Add line'        TO LS_TOOLBAR-TEXT.
  MOVE 'Add line'        TO LS_TOOLBAR-QUICKINFO.
  MOVE ICON_INSERT_ROW   TO LS_TOOLBAR-ICON.
  MOVE ' '               TO LS_TOOLBAR-DISABLED.
  APPEND LS_TOOLBAR      TO R_OBJECT->MT_TOOLBAR.

  CLEAR LS_TOOLBAR.
  MOVE 'DERO'            TO LS_TOOLBAR-FUNCTION.
  MOVE 'Delete line'     TO LS_TOOLBAR-TEXT.
  MOVE 'Delete line'     TO LS_TOOLBAR-QUICKINFO.
  MOVE ICON_DELETE_ROW   TO LS_TOOLBAR-ICON.
  MOVE ' '               TO LS_TOOLBAR-DISABLED.
  APPEND LS_TOOLBAR      TO R_OBJECT->MT_TOOLBAR.

  CLEAR LS_TOOLBAR.
  MOVE GC_SAVE TO LS_TOOLBAR-FUNCTION.
  MOVE ICON_SYSTEM_SAVE  TO LS_TOOLBAR-ICON.
  MOVE 'SAVE'            TO LS_TOOLBAR-QUICKINFO.
  MOVE 'SAVE'            TO LS_TOOLBAR-TEXT.
  MOVE ' '               TO LS_TOOLBAR-DISABLED.
  APPEND LS_TOOLBAR TO R_OBJECT->MT_TOOLBAR.


ENDFORM.                    " ALV_CL_TOOLBAR_PART1
*&---------------------------------------------------------------------*
*&      Form  ALV_CL_USER_COMMAND_PART1
*&---------------------------------------------------------------------*
FORM ALV_CL_USER_COMMAND_PART1  USING    P_UCOMM LIKE SY-UCOMM.

  CASE P_UCOMM.
    WHEN 'INRO' OR 'DERO'.

      PERFORM LINE_MODDIFY USING P_UCOMM(1).

    WHEN GC_SAVE.
      PERFORM SAVE_DATA.
      CALL METHOD CL_GUI_CFW=>SET_NEW_OK_CODE
        EXPORTING
          NEW_CODE = P_UCOMM.
  ENDCASE.

ENDFORM.                    " ALV_CL_USER_COMMAND_PART1
*&---------------------------------------------------------------------*
*&      Form  LINE_MODDIFY
*&---------------------------------------------------------------------*
FORM LINE_MODDIFY  USING   P_UCOMM.

  DATA:
    LT_CELLSTYL TYPE LVC_S_STYL OCCURS 0 WITH HEADER LINE,
    LT_CELLSCOL TYPE LVC_S_SCOL OCCURS 0 WITH HEADER LINE.
  DATA:
    LV_FILELINE  TYPE SY-TABIX,
    LT_FIDX     TYPE LVC_T_FIDX,
    LV_WAERS    TYPE WAERS,
    LV_TABIX    TYPE SY-TABIX.
  DATA:
    LT_INDEX_ROWS	TYPE 	LVC_T_ROW,
    LS_INDEX_ROWS TYPE  LVC_S_ROW,
    LT_ROW_NO     TYPE 	LVC_T_ROID,
    LS_ROW_NO     TYPE 	LVC_S_ROID,
    LV_ANSWER.


  DATA:
    LO_EXC  TYPE REF TO CX_SY_OPEN_SQL_DB,
    L_TEXT  TYPE STRING.

  CALL METHOD GO_ALV_GRID1->GET_SELECTED_ROWS
    IMPORTING
      ET_INDEX_ROWS = LT_INDEX_ROWS
      ET_ROW_NO     = LT_ROW_NO.


  CASE P_UCOMM.
    WHEN 'I'.  "Insert Row
      CALL METHOD GO_ALV_GRID1->GET_CURRENT_CELL
        IMPORTING
          E_ROW = LV_TABIX.
      IF LV_TABIX = 0.
        LV_TABIX = 1.
      ENDIF.

      "선택한 ROW 아래에 추가
      INSERT INITIAL LINE INTO <FS_TABLE>  INDEX LV_TABIX.

    WHEN 'D'. "Delete Row
      IF LT_INDEX_ROWS[] IS INITIAL.
        MESSAGE I000 WITH '삭제 할 라인을 선택하세요'.
        EXIT.
      ENDIF.
      PERFORM DISPLAY_MESSAGE
                  USING
                     '삭제'
                     '선택한 라인을 삭제 하시겠습니까?(DB삭제)'
                     'Yes'
                     'No'
                  CHANGING
                     LV_ANSWER.

      CHECK LV_ANSWER = '1'.

      SORT LT_INDEX_ROWS BY INDEX DESCENDING.

      LOOP AT LT_INDEX_ROWS INTO LS_INDEX_ROWS.
        IF NOT LS_INDEX_ROWS-ROWTYPE IS INITIAL.
          CONTINUE.
        ENDIF.

        READ TABLE <FS_TABLE> ASSIGNING <FS_WA> INDEX LS_INDEX_ROWS-INDEX.
        CHECK SY-SUBRC EQ 0.
        TRY.
            DELETE (P_TABNAM) FROM <FS_WA>.
          CATCH CX_SY_OPEN_SQL_DB INTO LO_EXC.
            L_TEXT = LO_EXC->GET_TEXT( ).
            MESSAGE S000 WITH L_TEXT DISPLAY LIKE 'E'.
            EXIT.
        ENDTRY.

        DELETE <FS_TABLE> INDEX LS_INDEX_ROWS-INDEX.
      ENDLOOP.

  ENDCASE.

  CALL METHOD GO_ALV_GRID1->GET_FILTERED_ENTRIES
    IMPORTING
      ET_FILTERED_ENTRIES = LT_FIDX.


  DESCRIBE TABLE <FS_TABLE> LINES G_TOTALLINE.
  DESCRIBE TABLE LT_FIDX LINES LV_FILELINE.
  G_FILTEREDLINE = G_TOTALLINE - LV_FILELINE.
  CONDENSE:
    G_FILTEREDLINE,
    G_TOTALLINE.
  CONCATENATE 'Total :'
              G_FILTEREDLINE
              '/'
              G_TOTALLINE
         INTO GS_ALV_LAYOUT1-GRID_TITLE.

  PERFORM ALV_CL_SET_GRID_TITLE USING GO_ALV_GRID1
                                      GS_ALV_LAYOUT1-GRID_TITLE.

  CALL METHOD CL_GUI_CFW=>SET_NEW_OK_CODE
    EXPORTING
      NEW_CODE = 'ADD'.


ENDFORM.                    " LINE_MODDIFY
*&---------------------------------------------------------------------*
*&      Form  ALV_CL_CELL_DATA_CHANGED1
*&---------------------------------------------------------------------*
FORM ALV_CL_CELL_DATA_CHANGED1
                  USING PR_DATA_CHANGED
                         TYPE REF TO CL_ALV_CHANGED_DATA_PROTOCOL.

  DATA : LS_MOD_CELLS TYPE LVC_S_MODI,
         LS_CELLS     TYPE LVC_S_MODI.

* Internal Value Control Use
  DATA: LV_TABIX TYPE I.
  DATA: LT_DELTA_CELLS    TYPE LVC_T_MODI,
        LS_DELTA_CELLS    LIKE LVC_S_MODI.

  DATA: LS_ROW LIKE LVC_S_ROW,
        LS_COL LIKE LVC_S_COL.

  DATA: LV_HKONT TYPE HKONT,
        LV_KOSTL TYPE KOSTL.


  LOOP AT PR_DATA_CHANGED->MT_GOOD_CELLS INTO LS_MOD_CELLS.
    LV_TABIX = LS_MOD_CELLS-ROW_ID.


    PERFORM ALV_CL_GET_CELL_VALUE USING PR_DATA_CHANGED
                                        LS_MOD_CELLS-ROW_ID
                                        LS_MOD_CELLS-FIELDNAME
                               CHANGING LS_MOD_CELLS-VALUE.

*    ASSIGN COMPONENT LS_MOD_CELLS-FIELDNAME OF STRUCTURE <FS_WA> TO <FS_FIELD>.

  ENDLOOP.

*

ENDFORM.                    " ALV_CL_CELL_DATA_CHANGED1
*&---------------------------------------------------------------------*
*&      Form  ALV_CL_CELL_DATA_CHANGED1_FIN
*&---------------------------------------------------------------------*
FORM ALV_CL_CELL_DATA_CHANGED1_FIN
                             USING P_MODIFIED
                                   PT_GOOD_CELLS TYPE LVC_T_MODI.
  DATA: LS_GOOD_CELLS TYPE LVC_S_MODI.
  CHECK NOT P_MODIFIED IS INITIAL.
*   ALV Refresh
*  PERFORM ALV_CL_REFRESH_TABLE_DISPLAY
*                          USING  GO_ALV_GRID1
*                                 G_REC_STABLE1.

ENDFORM.                    " ALV_CL_CELL_DATA_CHANGED1_FIN
*&---------------------------------------------------------------------*
*&      Form  ALV_CL_SET_GRID_TITLE
*&---------------------------------------------------------------------*
FORM ALV_CL_SET_GRID_TITLE
        USING PO_ALV_GRID TYPE REF TO CL_GUI_ALV_GRID
              PV_GRID_TITLE TYPE LVC_TITLE.

  CALL METHOD PO_ALV_GRID->SET_GRIDTITLE
    EXPORTING
      I_GRIDTITLE = PV_GRID_TITLE.

ENDFORM.                    " ALV_CL_SET_GRID_TITLE
*&---------------------------------------------------------------------*
*&      Form  ALV_CL_FIELDCATALOG_MERGE_1ST
*&---------------------------------------------------------------------*
FORM ALV_CL_FIELDCATALOG_MERGE_1ST .

  LOOP AT GT_FDCAT1 INTO GS_FDCAT.
    GS_FDCAT-EDIT =  'X'.
    MODIFY GT_FDCAT1 FROM GS_FDCAT.
  ENDLOOP.
ENDFORM.                    " ALV_CL_FIELDCATALOG_MERGE_1ST
*&---------------------------------------------------------------------*
*&      Form  SAVE_DATA
*&---------------------------------------------------------------------*
FORM SAVE_DATA .
  DATA:
    LV_FILELINE  TYPE SY-TABIX,
    LT_FIDX     TYPE LVC_T_FIDX,
    LV_WAERS    TYPE WAERS,
    LV_TABIX    TYPE SY-TABIX.
  DATA:
    LT_INDEX_ROWS	TYPE 	LVC_T_ROW,
    LS_INDEX_ROWS TYPE  LVC_S_ROW,
    LT_ROW_NO     TYPE 	LVC_T_ROID,
    LS_ROW_NO     TYPE 	LVC_S_ROID,
    LV_ANSWER.

  FIELD-SYMBOLS: <LS_TABLE> TYPE STANDARD TABLE.

  DATA:
    LO_EXC  TYPE REF TO CX_SY_OPEN_SQL_DB,
    L_TEXT  TYPE STRING.

  CALL METHOD GO_ALV_GRID1->GET_SELECTED_ROWS
    IMPORTING
      ET_INDEX_ROWS = LT_INDEX_ROWS
      ET_ROW_NO     = LT_ROW_NO.


  IF LT_INDEX_ROWS[] IS INITIAL.
    MESSAGE I000 WITH '저장 할 라인을 선택하세요'.
    EXIT.
  ENDIF.
  PERFORM DISPLAY_MESSAGE
              USING
                 '저장'
                 '선택한 라인을 저장 하시겠습니까?'
                 'Yes'
                 'No'
              CHANGING
                 LV_ANSWER.

  CHECK LV_ANSWER = '1'.
* 삭제 후 저장
  IF CH_01 = GC_X.
    DELETE FROM (P_TABNAM)
     WHERE (GT_WHC).
  ENDIF.

  LOOP AT LT_INDEX_ROWS INTO LS_INDEX_ROWS.
    READ TABLE <FS_TABLE> ASSIGNING <FS_WA> INDEX LS_INDEX_ROWS-INDEX.
    CHECK SY-SUBRC EQ 0.
    TRY.
        MODIFY (P_TABNAM) FROM <FS_WA>.
      CATCH CX_SY_OPEN_SQL_DB INTO LO_EXC.
        L_TEXT = LO_EXC->GET_TEXT( ).
        MESSAGE S000 WITH L_TEXT DISPLAY LIKE 'E'.
        EXIT.
    ENDTRY.
  ENDLOOP.



ENDFORM.                    " SAVE_DATA
